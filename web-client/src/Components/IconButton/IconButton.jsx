import React from "react";
import PropTypes from "prop-types";
import { withStyles } from "@material-ui/core/styles";

import "./IconButton.scss";

const styles = {};

function IconButton(props) {
  return (
    <div className={"iconButton-" + props.colour + " iconButton"}>
      {props.icon === "next" && (
        <svg
          width="150"
          height="150"
          viewBox="0 0 5 5"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M3.18932 2.49515C3.18932 2.47573 3.17961 2.45631 3.16505 2.4466L2.60194 2.03398C2.59223 2.02427 2.57767 2.02427 2.56311 2.02427C2.55825 2.02427 2.5534 2.02427 2.54854 2.02427C2.54369 2.02427 2.53884 2.02427 2.53398 2.02913C2.51456 2.03884 2.5 2.06311 2.5 2.08253V2.34952H1.9466C1.86893 2.34952 1.80097 2.41262 1.80097 2.49515C1.80097 2.57282 1.86408 2.64078 1.9466 2.64078H2.5V2.90777C2.5 2.91262 2.5 2.91748 2.5 2.92233V2.92719C2.5 2.93204 2.50486 2.9369 2.50486 2.9369C2.50486 2.9369 2.50486 2.9369 2.50486 2.94175C2.50486 2.9466 2.50971 2.95146 2.51456 2.95146C2.51942 2.95631 2.52427 2.96117 2.52913 2.96117C2.54854 2.97088 2.57282 2.97088 2.59223 2.95631L3.15534 2.54369C3.1699 2.53398 3.17961 2.51457 3.17961 2.49515H3.18932Z"
            fill={props.colour === "white" ? "#ffffff" : "#21c0fc"}
          />
          <path
            d="M2.5 4C3.3301 4 4 3.32524 4 2.5C4 1.6699 3.32524 1 2.5 1C1.6699 1 1 1.67476 1 2.5C1 3.3301 1.67476 4 2.5 4Z"
            stroke={props.colour === "white" ? "#ffffff" : "#21c0fc"}
            strokeWidth="0.1"
            strokeLinecap="round"
          />
        </svg>
      )}
      {props.icon === "tick" && (
        <svg width="150" height="150" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M50 80C66.602 80 80 66.5048 80 50C80 33.398 66.5048 20 50 20C33.398 20 20 33.4952 20 50C20 66.602 33.4952 80 50 80Z" stroke={props.colour === "white" ? "#ffffff" : "#21c0fc"} strokeWidth="2" strokeLinecap="round"/>
        <path d="M62.7692 37.5798C61.4688 36.6521 59.704 36.8376 58.7751 38.1365L45.3994 55.6708L41.0337 50.4755C40.0119 49.2694 38.2471 49.0839 37.0396 50.1044C36.4822 50.5682 36.1107 51.3104 36.0178 52.0526C35.9249 52.7948 36.2036 53.537 36.668 54.0937L43.3559 61.9795C43.9132 62.6289 44.6563 63 45.5852 63H45.678C46.514 63 47.35 62.5361 47.9073 61.8867L63.4195 41.5691C64.3483 40.3631 64.1626 38.5076 62.8621 37.5798H62.7692Z" fill={props.colour === "white" ? "#ffffff" : "#21c0fc"}/>
        </svg>
      )}
      {props.icon === "trophy" &&(
        <svg width="400" height="400" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M50 80C66.602 80 80 66.5048 80 50C80 33.398 66.5048 20 50 20C33.398 20 20 33.4952 20 50C20 66.602 33.4952 80 50 80Z" stroke={props.colour === "white" ? "#ffffff" : "#21c0fc"} strokeWidth="2" strokeLinecap="round"/>
        <path d="M54.9855 61.0309C54.8261 60.5525 54.4274 60.2335 53.9489 60.2335H51.6365V56.3263C51.0783 56.406 50.4404 56.4858 49.8823 56.4858C49.2444 56.4858 48.6862 56.406 48.128 56.3263V60.2335H45.8156C45.3372 60.2335 44.9385 60.5525 44.779 61.0309L43.9816 63.9812C43.9019 64.3002 43.9816 64.6191 44.1411 64.9381C44.3803 65.1773 44.6992 65.3368 45.0182 65.3368H54.7463C55.3045 65.3368 55.7829 64.8584 55.7829 64.2204C55.7829 64.061 55.7829 63.9015 55.7032 63.8218L54.9058 61.0309H54.9855Z" fill={props.colour === "white" ? "#ffffff" : "#21c0fc"} />
        <path d="M62.0016 44.2066C61.5232 45.8811 60.3271 47.1569 59.131 47.3961C59.131 47.3164 59.131 47.3164 59.131 47.2366C59.131 47.1569 59.131 47.1569 59.131 47.1569C59.2108 46.9177 59.2108 46.6785 59.2905 46.3595C59.2905 46.2798 59.2905 46.2798 59.2905 46.2C59.3703 45.9608 59.3703 45.6419 59.3703 45.4026V45.3229C59.3703 45.0039 59.3703 44.7647 59.3703 44.4458V39.6615C59.5297 39.6615 59.6095 39.5817 59.7689 39.5817C59.9284 39.5817 60.0879 39.5817 60.2474 39.6615C61.6827 40.0601 62.4003 42.1334 61.8422 44.2066H62.0016ZM55.1441 42.2131L52.2735 44.366L53.3101 47.7948C53.3101 47.9543 53.3101 48.034 53.1506 48.1138C53.0709 48.1138 52.9912 48.1935 52.9912 48.1935C52.9114 48.1935 52.8317 48.1935 52.8317 48.1138L49.8813 46.1203L46.931 48.1138C46.8513 48.1935 46.6918 48.1935 46.5323 48.1138C46.4526 48.034 46.3728 47.8745 46.4526 47.7948L47.4892 44.366L44.6186 42.2131C44.5388 42.1334 44.4591 41.9739 44.5388 41.8144C44.6186 41.6549 44.6983 41.5752 44.8578 41.5752L48.446 41.4954L49.6421 38.1464C49.7219 37.9869 49.8016 37.9072 49.9611 37.9072C50.1206 37.9072 50.2003 37.9869 50.28 38.1464L51.4761 41.4954L55.0644 41.5752C55.2238 41.5752 55.3036 41.6549 55.3833 41.8144C55.4631 41.9739 55.3833 42.0536 55.3036 42.2131H55.1441ZM37.8408 44.2066C37.2826 42.1334 38.0003 40.0601 39.4356 39.6615C39.595 39.6615 39.7545 39.5817 39.914 39.5817C40.0735 39.5817 40.1532 39.5817 40.3127 39.6615V44.4458C40.3127 44.7647 40.3127 45.0039 40.3127 45.3229V45.4026C40.3127 45.6419 40.3924 45.9608 40.3924 46.2C40.3924 46.2798 40.3924 46.2798 40.3924 46.3595C40.4722 46.5987 40.4722 46.9177 40.5519 47.1569V47.2366C40.5519 47.3164 40.5519 47.3164 40.5519 47.3961C39.3558 47.2366 38.1597 45.8811 37.6813 44.2066H37.8408ZM60.8853 37.9869C60.5663 37.9072 60.2474 37.9072 60.0082 37.9072C59.8487 37.9072 59.6892 37.9072 59.6095 37.9072V35.0366C59.6095 34.4784 59.131 34 58.5729 34H41.3493C40.7911 34 40.3127 34.4784 40.3127 35.0366V37.9072C40.1532 37.9072 40.0735 37.9072 39.914 37.9072C39.595 37.9072 39.2761 37.9072 39.0369 37.9869C36.6447 38.6248 35.4486 41.5752 36.246 44.6053C36.9637 47.2366 39.0369 49.0706 41.1101 49.0706C41.1898 49.0706 41.3493 49.0706 41.429 49.0706C41.5088 49.2301 41.5885 49.3896 41.6682 49.5491C41.6682 49.5491 41.6682 49.6288 41.748 49.6288C41.9075 49.868 41.9872 50.1072 42.1467 50.2667C42.1467 50.2667 42.1467 50.3464 42.2264 50.3464C42.3859 50.5857 42.5454 50.8249 42.7049 50.9844C43.0238 51.4628 43.4225 51.8615 43.8212 52.1804C44.0604 52.3399 44.2199 52.5791 44.4591 52.7386C45.3362 53.4563 46.3728 53.9347 47.4094 54.2536C47.6487 54.3334 47.9676 54.4131 48.2068 54.4929C48.5258 54.5726 48.765 54.5726 49.084 54.6523C49.4029 54.6523 49.6421 54.7321 49.9611 54.7321C50.28 54.7321 50.5193 54.7321 50.8382 54.6523C51.1572 54.6523 51.3964 54.5726 51.7153 54.4929C51.9545 54.4131 52.2735 54.3334 52.5127 54.2536C53.5493 53.9347 54.5859 53.3765 55.4631 52.7386C55.7023 52.5791 55.8617 52.4197 56.101 52.1804C56.4997 51.7817 56.8984 51.3831 57.2173 50.9844C57.3768 50.7451 57.5363 50.5857 57.6957 50.3464C57.6957 50.3464 57.6957 50.2667 57.7755 50.2667C57.935 50.0275 58.0147 49.7883 58.1742 49.5491C58.1742 49.5491 58.1742 49.4693 58.2539 49.4693C58.3337 49.3098 58.4134 49.1504 58.4931 48.9909C58.5729 48.9909 58.7323 48.9909 58.8121 48.9909C60.8853 48.9909 62.9585 47.1569 63.6761 44.5255C64.4735 41.4954 63.1977 38.4654 60.8853 37.9072V37.9869Z" fill={props.colour === "white" ? "#ffffff" : "#21c0fc"} />
        </svg>
      )}
      <div className="iconButtonText">{props.text}</div>
    </div>
  );
}

IconButton.propTypes = {
  classes: PropTypes.object.isRequired
};

export default withStyles(styles)(IconButton);
